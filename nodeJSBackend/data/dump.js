//  {
//    _mongooseOptions: {},
//    _transforms: [],
//    _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },
//    _executionStack: Error
//        at model.Query.exec (/usr/src/app/node_modules/mongoose/lib/query.js:4323:28)
//        at Query.then (/usr/src/app/node_modules/mongoose/lib/query.js:4450:15)
//        at process.processTicksAndRejections (node:internal/process/task_queues:95:5),
//    mongooseCollection: Collection {
//      collection: Collection { s: [Object], client: [MongoClient] },
//      Promise: [Function: Promise],
//      modelName: 'Flowchart',
//      _closed: false,
//      opts: {
//        autoIndex: true,
//        autoCreate: true,
//        autoSearchIndex: false,
//        schemaUserProvidedOptions: {},
//        capped: false,
//        Promise: undefined,
//        '$wasForceClosed': undefined
//      },
//      name: 'flowcharts',
//      collectionName: 'flowcharts',
//      conn: NativeConnection {
//        base: [Mongoose],
//        collections: [Object],
//        models: [Object],
//        config: {},
//        replica: false,
//        options: null,
//        otherDbs: [],
//        relatedDbs: {},
//        states: [Object: null prototype],
//        _readyState: 1,
//        _closeCalled: undefined,
//        _hasOpened: true,
//        plugins: [],
//        id: 0,
//        _queue: [],
//        _listening: false,
//        _connectionOptions: [Object],
//        _connectionString: 'mongodb://mongo:27017/simple-auth-db',
//        client: [MongoClient],
//        '$initialConnection': [Promise],
//        db: [Db],
//        host: 'mongo',
//        port: 27017,
//        name: 'simple-auth-db'
//      },
//      queue: [],
//      buffer: false,
//      emitter: EventEmitter {
//        _events: [Object: null prototype] {},
//        _eventsCount: 0,
//        _maxListeners: undefined,
//        [Symbol(kCapture)]: false
//      }
//    },
//    model: Model { Flowchart },
//    schema: Schema {
//      obj: {
//        name: [Object],
//        createdAt: [Object],
//        nodes: [Array],
//        edges: [Array],
//        promptText: [Object],
//        user: [Object]
//      },
//      paths: {
//        name: [SchemaString],
//        createdAt: [SchemaDate],
//        nodes: [SchemaDocumentArray],
//        edges: [SchemaDocumentArray],
//        promptText: [SchemaString],
//        user: [SchemaObjectId],
//        _id: [SchemaObjectId],
//        __v: [SchemaNumber]
//      },
//      aliases: {},
//      subpaths: {
//        'nodes.id': [SchemaString],
//        'nodes.type': [SchemaString],
//        'nodes.position.x': [SchemaNumber],
//        'nodes.position.y': [SchemaNumber],
//        'nodes.data': [SchemaMixed],
//        'nodes._id': [SchemaObjectId],
//        'edges.id': [SchemaString],
//        'edges.source': [SchemaString],
//        'edges.sourceHandle': [SchemaString],
//        'edges.target': [SchemaString],
//        'edges.targetHandle': [SchemaString],
//        'edges.type': [SchemaString],
//        'edges.data': [SchemaMixed],
//        'edges._id': [SchemaObjectId]
//      },
//      virtuals: { id: [VirtualType] },
//      singleNestedPaths: {},
//      nested: {},
//      inherits: {},
//      callQueue: [],
//      _indexes: [],
//      _searchIndexes: [],
//      methods: {},
//      methodOptions: {},
//      statics: {},
//      tree: {
//        name: [Object],
//        createdAt: [Object],
//        nodes: [Array],
//        edges: [Array],
//        promptText: [Object],
//        user: [Object],
//        _id: [Object],
//        __v: [Function: Number],
//        id: [VirtualType]
//      },
//      query: {},
//      childSchemas: [ [Object], [Object] ],
//      plugins: [ [Object], [Object], [Object], [Object], [Object] ],
//      '$id': 5,
//      mapPaths: [],
//      s: { hooks: [Kareem] },
//      _userProvidedOptions: {},
//      options: {
//        strict: true,
//        strictQuery: false,
//        bufferCommands: true,
//        capped: false,
//        versionKey: '__v',
//        optimisticConcurrency: false,
//        minimize: true,
//        autoIndex: null,
//        discriminatorKey: '__t',
//        shardKey: null,
//        read: null,
//        validateBeforeSave: true,
//        validateModifiedOnly: false,
//        _id: true,
//        id: true,
//        typeKey: 'type',
//        pluralization: true
//      },
//      '$globalPluginsApplied': true,
//      _requiredpaths: [ 'user', 'name' ]
//    },
//    op: 'findOneAndUpdate',
//    options: { new: true, upsert: true },
//    _conditions: { name: 'test1' },
//    _fields: undefined,
//    _updateDoc: undefined,
//    _path: undefined,
//    _distinctDoc: undefined,
//    _collection: NodeCollection {
//      collection: Collection {
//        collection: [Collection],
//        Promise: [Function: Promise],
//        modelName: 'Flowchart',
//        _closed: false,
//        opts: [Object],
//        name: 'flowcharts',
//        collectionName: 'flowcharts',
//        conn: [NativeConnection],
//        queue: [],
//        buffer: false,
//        emitter: [EventEmitter]
//      },
//      collectionName: 'flowcharts'
//    },
//    _traceFunction: undefined,
//    '$useProjection': true,
//    _update: {
//      '$set': {
//        name: 'test1',
//        nodes: [Array],
//        edges: [Array],
//        user: '667e8d470d16951275ebae90'
//      },
//      '$setOnInsert': { __v: 0 }
//    }
//  }
